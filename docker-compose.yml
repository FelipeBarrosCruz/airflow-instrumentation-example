---
version: "3.4"

x-common: &common
  build:
    context: .
    dockerfile: ./.docker/airflow/Dockerfile
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./src/requirements.txt:/requirements.txt
    - ./.docker/airflow/setup:/opt/setup
    - ./src:/opt/airflow/dags
    - ./.docker/airflow/logs:/opt/airflow/logs
    - ./.docker/airflow/plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock

x-depends-on: &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-setup:
      condition: service_completed_successfully

services:
  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      retries: 5
    env_file:
      - .env
    networks:
      - default

  scheduler:
    <<: [*common, *depends-on]
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "${AIRFLOW_SCHEDULER_PORT}:8793"
    networks:
      - default

  webserver:
    <<: [*common, *depends-on]
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "${AIRFLOW_WEBSERVER_PORT}:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
    networks:
      - default

  airflow-setup:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - /opt/setup
    networks:
      - default

volumes:
  postgres_data:

networks:
  default:
    name: airflow_default
